server {
       listen 443 ssl;
       server_name tv.lblog.ggff.net;
       charset utf-8;
      
       ssl_certificate /home/cert/tvcertificate.crt;
       ssl_certificate_key /home/cert/tvprivate.pem;	
 
       location / {
            proxy_pass http://127.0.0.1:3000;

            # 重要的代理头信息，让 Next.js 服务器知道原始请求的来源
            proxy_set_header Host $host; # 原始主机名
            proxy_set_header X-Real-IP $remote_addr; # 客户端真实 IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 代理链
            proxy_set_header X-Forwarded-Proto $scheme; # 原始协议 (http/https)
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # 添加 CORS 头以支持视频播放
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Range, Origin, Accept' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range, Accept-Ranges, Content-Type' always;
            
            # 处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Range, Origin, Accept';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
      }
  		location /ws-api {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 特定的超时设置（长连接）
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # 禁用缓冲以减少延迟
        proxy_buffering off;
    }
}

server {
	listen 80;

	server_name tv.lblog.ggff.net;
	
	return 301 https://tv.lblog.ggff.net$request_uri;
}